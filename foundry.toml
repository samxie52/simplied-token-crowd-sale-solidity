[profile.default]
# 基础配置
src = "contracts"
out = "out"
libs = ["lib"]
test = "test"
script = "script"
cache_path = "cache"

# Solidity编译器配置
solc = "0.8.28"
auto_detect_solc = false
optimizer = true
optimizer_runs = 200
via_ir = false

# 测试配置
verbosity = 2
fuzz = { runs = 1000 }
gas_limit = 9223372036854775807
gas_price = 20000000000

# 格式化配置
[fmt]
line_length = 100
tab_width = 4
bracket_spacing = true
int_types = "long"
multiline_func_header = "all"
quote_style = "double"
number_underscore = "thousands"

# 测试相关配置
[fuzz]
runs = 10000
max_test_rejects = 65536
seed = '0x3e8'
dictionary_weight = 40
include_storage = true
include_push_bytes = true

# RPC端点配置
[rpc_endpoints]
mainnet = "${MAINNET_RPC_URL}"
goerli = "${GOERLI_RPC_URL}"
sepolia = "${SEPOLIA_RPC_URL}"
polygon = "${POLYGON_RPC_URL}"
arbitrum = "${ARBITRUM_RPC_URL}"
optimism = "${OPTIMISM_RPC_URL}"
localhost = "http://localhost:8545"

# Etherscan API配置（用于合约验证）
[etherscan]
mainnet = { key = "${ETHERSCAN_API_KEY}" }
goerli = { key = "${ETHERSCAN_API_KEY}" }
sepolia = { key = "${ETHERSCAN_API_KEY}" }
polygon = { key = "${POLYGONSCAN_API_KEY}", url = "https://api.polygonscan.com/" }
arbitrum = { key = "${ARBISCAN_API_KEY}", url = "https://api.arbiscan.io/" }
optimism = { key = "${OPTIMISTIC_ETHERSCAN_API_KEY}", url = "https://api-optimistic.etherscan.io/" }

# Gas报告配置
[gas_reports]
"*" = { ignore = false }